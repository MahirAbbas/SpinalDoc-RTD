
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDLReport-Msgid-Bugs-To:POT-Creation-"
"Date:2023-12-01 11:48+0800PO-Revision-Date:YEAR-MO-DA HO:MI+ZONELast-"
"Translator:FULL NAME <EMAIL@ADDRESS>Language:zh_CNLanguage-Team:zh_CN "
"<LL@li.org>Plural-Forms:nplurals=1; plural=0;MIME-Version:1.0Content-"
"Type:text/plain; charset=UTF-8\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2023-12-02 00:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:4
msgid "Install and setup"
msgstr "安装和设置"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:6
#, fuzzy
msgid ""
"Spinal is a Scala library (a programming language using the Java VM) so "
"it requires setting up a Scala environment; there are many ways to do so."
" Also, it generates VHDL, Verilog or SystemVerilog, which can be used by "
"many different tools. This section describes the supported way to install"
" a *SpinalHDL description to Simulation* flow, but there can be many "
"variations."
msgstr ""
"Spinal是一个Scala库，所以需要搭建Scala环境；有很多方法可以做到这一点。此外，它还生成 VHDL、Verilog 或 "
"SystemVerilog，可供许多不同的工具使用。本节介绍将 *SpinalHDL 描述安装到模拟* 流程的受支持方法，但可能有多种变化。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:13
msgid "Required/Recommended tools"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:15
msgid ""
"Before you download the SpinalHDL tools, you need to install a Scala "
"environment:"
msgstr "在下载 SpinalHDL 工具之前，您需要安装 Scala 环境："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:17
msgid ""
"`Java JDK <https://www.oracle.com/java/technologies/downloads/>`_, a Java"
" environment"
msgstr "`Java JDK <https://www.oracle.com/java/technologies/downloads/>`_，Java 环境"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:19
msgid "`Scala 2 <https://www.scala-lang.org/>`_, compiler and library"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:20
msgid "`SBT <https://www.scala-sbt.org/download.html>`_, a Scala build tool"
msgstr "`SBT <https://www.scala-sbt.org/download.html>`_，Scala 构建工具"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:22
#, fuzzy
msgid ""
"These tools enable to use Spinal; but without any other tools, it is "
"limited to HDL code generation."
msgstr "这些工具可以使用 Spinal；但没有任何其他工具，它仅限于代码生成。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:25
#, fuzzy
msgid "To enable more features we recommend:"
msgstr "要启用更多功能："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:27
#, fuzzy
msgid ""
"An IDE (for instance the currently recommended `IntelliJ "
"<https://www.jetbrains.com/idea/>`_ with its Scala plugin or `VSCodium "
"<https://vscodium.com/>`_ with Metals extension) to get features such as:"
msgstr ""
"一个 IDE（例如带有 Scala 插件的 IntelliJ <https://www.jetbrains.com/idea/>`_ 或带有 "
"Metals 扩展的 VSCodium <https://vscodium.com/>`_），以获得诸如作为："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:31
msgid "Code suggestions / completion"
msgstr "代码建议/完成"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:32
msgid "Automatic build with syntax errors right in the code"
msgstr "自动构建，代码中存在语法错误"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:33
msgid "Generate code with a single click"
msgstr "单击即可生成代码"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:34
msgid ""
"Run simulation / tests with a single click (if a supported simulator is "
"set up)"
msgstr "单击即可运行模拟/测试（如果设置了支持的模拟器）"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:37
msgid ""
"A supported simulator like `Verilator "
"<https://www.veripool.org/verilator/>`_ to test the design right from "
"SpinalHDL."
msgstr ""
"支持的模拟器，例如“Verilator <https://www.veripool.org/verilator/>”，可以直接从 "
"SpinalHDL 测试设计。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:39
msgid ""
"`Gtkwave <https://gtkwave.sourceforge.net/>`_ to view the waves generated"
" by Verilator during simulation."
msgstr "`Gtkwave <https://gtkwave.sourceforge.net/>`_ 查看 Verilator 在模拟过程中生成的波形。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:41
msgid "`Git <https://git-scm.com/>`_ for version control system"
msgstr "`Git <https://git-scm.com/>`_ 用于版本控制系统"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:42
msgid "A C++ toolchain, needed for simulating with Verilator"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:43
msgid "A linux shell, needed for simulating with Verilator"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:46
msgid "Linux Installation"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:48
msgid ""
"At time of writing the recommended way of installing Scala and SBT is via"
" `Coursier <https://get-coursier.io/docs/cli-installation>`_. Coursier is"
" able to in addition to the scala tools install a Java JDK to use, in the"
" example below we install Java from the package manager. We recommend to "
"install JDK 17 (LTS) because of compatibility with the used Scala "
"version."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:53
msgid "For Debian or Ubuntu we run:"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:65
msgid ""
"If you want to install the tools for simulation and/or formal proofs, we "
"recommend `oss-cad-suite <https://github.com/YosysHQ/oss-cad-suite-"
"build>`_. It contains a waveform viewer (gtkWave), verilog simulators "
"(verilator and iverilog), VHDL simulator (GHDL) and other tools. In case "
"you want to build the tools yourself have a look at the legacy simulation"
" tool :ref:`installation instructions <sim backend install>`."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:69
msgid ""
"We first install the needed C++ toolchain and download oss-cad-suite. To "
"use it we must load the oss-cad-suite environment for each shell we want "
"to use it in. Note that oss-cad-suite contains a Python 3 interpreter "
"that may interfere with the system Python installation if loaded "
"permanently."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:73
msgid ""
"Go to the oss-cad-suite `release page <https://github.com/YosysHQ/oss-"
"cad-suite-build/releases/latest>`_ to get the download link for the "
"latest version. You can download/extract oss-cad-suite to a folder of "
"your choice. (last tested version of oss-cad-suite is `2023-10-22`, but "
"more recent ones will most likely also work)"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:83
msgid ""
"To use oss-cad-suite in a shell you need to load it's environment, e.g. "
"via ``souce <path to oss-cad-suite>/environment``."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:87
msgid "Mac OS X Installation"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:88
msgid ""
"You can use homebrew to install on Mac OS X.  By default homebrew "
"installs Java 21, but the  SpinalHDL tutorial SpinalTemplateSbt uses "
"Scala version 2.12.16, which is not supported by Java 21 (17 is still the"
" recommended LTS version, https://whichjdk.com/). So to install Java "
"version 1.7 do:"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:96
msgid "And then add this to your path."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:102
msgid ""
"To manage multiple versions of Java it is also essential to have jenv "
"installed."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:108
msgid "Jenv added these lines to my .bash_profile"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:115
msgid "Next you have to install scala's interactive build tool sbt."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:121
msgid ""
"If this works for you, please let us know.  If this does not work for "
"you, you can read the github issue about Mac o SX installation here. "
"https://github.com/SpinalHDL/SpinalHDL/issues/1216"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:124
msgid ""
"If you want to install the tools for simulation and/or formal proofs, we "
"recommend `oss-cad-suite <https://github.com/YosysHQ/oss-cad-suite-"
"build>`_."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:127
msgid "Windows installation"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:130
msgid ""
"While a native installation is possible the simpler and currently "
"recommended way is to use WSL on Windows. If you want to use WSL, install"
" `it <https://learn.microsoft.com/en-us/windows/wsl/install>`_, a "
"distribution of your choice and follow the Linux installation "
"instructions. Data in your WSL instance can be accessed from windows "
"under ``\\\\wsl$``. In case you want to use IntelliJ you'll have to "
"download the Linux version to WSL, if you want to use VSCode then the "
"Windows version can be used to remotely edit in WSL."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:136
msgid ""
"At time of writing the recommended way of installing Scala and SBT is via"
" `Coursier <https://get-coursier.io/docs/cli-installation>`_. Coursier is"
" able to in addition to the scala tools install a Java JDK to use, in the"
" example below we install Java manually. We recommend to install JDK 17 "
"(LTS) because of compatibility with Scala."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:141
msgid ""
"First download and install `Adoptium JDK 17 "
"<https://adoptium.net/temurin/releases/?os=windows&version=17>`_. "
"Download, unzip and run the `Coursier installer "
"<https://github.com/coursier/launchers/raw/master/cs-x86_64-pc-"
"win32.zip>`_, when asked agree to an update of your ``PATH`` variable. "
"Reboot to force an update of ``PATH``."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:145
msgid ""
"This is sufficient for generating hardware. For simulation continue with "
"either choice below. In case you want to build the tools yourself have a "
"look at the legacy simulation tool :ref:`installation instructions <sim "
"backend install>`."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:149
msgid ""
"An All-in-One solution offered by SpinalHDL maintainer `Readon "
"<https://github.com/Readon>` is available to install and run SpinalHDL "
"with Verilator simulation and formal verification via SymbiYosys. "
"Download `it <https://github.com/Readon/msys2-installer/releases>`_ and "
"install the environment anywhere on your disk. Start the build "
"environment by clicking on the MSYS2-MINGW64 icon in the Start menu and "
"use the MSYS2 default console. An alternative is to use the Windows "
"Terminal or a Tabby-like application and use the startup command "
"``%MSYS2_ROOT%\\msys2_shell.cmd -defterm -here -no-start -mingw64``, "
"where the ``%MSYS2_ROOT%`` is the location of the msys2 installation. It "
"is worth noting that if you want to use it offline, you should carefully "
"select the libraries that the project depends on, otherwise you will need"
" to download the packages manually. See the README for the repos for more"
" details."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:158
msgid "MSYS2 verilator for simulation"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:160
msgid ""
"We recommend to install compiler/verilator through `MSYS2 "
"<https://www.msys2.org>`. Other methods of installing gcc/make/shell "
"(e.g. chocolatey, scoop, etc.) may also work but are untested."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:163
msgid ""
"SpinalHDL maintainer `Readon <https://github.com/Readon>` is maintaining "
"a MSYS2 fork that default installs all needed officially available and "
"custom built packages (also maintained by Readon `here "
"<https://github.com/Readon/MINGW-SpinalHDL>`) for simulation and formal "
"verification. It can be found `here "
"<https://github.com/Readon/msys2-installer>`. If used then the packages "
"installed below via ``pacman`` are already installed and those "
"installation steps can be skipped."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:169
msgid "Currently verilator 4.228 is latest available version known to work."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:171
msgid ""
"Download the latest installer and install MSYS2 with default settings. "
"You should get a MSYS2 terminal at the end of the installation, there "
"run:"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:184
msgid ""
"In a MSYS2 MINGW64 terminal we need to set some environment variables to "
"make Java/sbt available (you can make these settings persistent by adding"
" them to ``~/.bashrc`` in MSYS2):"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:193
msgid ""
"With this you should be able to run sbt/verilator simulations from MSYS2 "
"terminals (sbt via calling ``sbt.bat``)."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:196
msgid "MSYS2 for formal verification"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:198
msgid ""
"In addition to the steps above we also need to install yosys, sby, z3 and"
" yices. Both yosys(yosys-smtbmc workable) and sby are not available as "
"official MSYS2 packages, but packages are provided by `Readon "
"<https://github.com/Readon>`. If you used their installer then these "
"steps are not needed (you should check if there are newer packages "
"available)."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:212
msgid "OCI Container"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:214
msgid ""
"A container for SpinalHDL development is available as well. The container"
" is hosted at ``ghcr.io/spinalhdl/docker:master`` and can be used with "
"Docker/Podman/Github Codespaces. It is used for the SpinalHDL CI "
"regression and can therefore be an easy way to run the CI commands "
"locally."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:218
msgid ""
"To run the container run e.g. ``podman run -v .:/workspace -it "
"ghcr.io/spinalhdl/docker:master`` in a SpinalHDL project root directory, "
"making the project directory available in ``/workspace``."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:221
msgid ""
"Please consult the documentation of you Distribution (Linux, WSL) or "
"Docker (Windows) on how to install the container runtime you want to use."
" Multiple editors/IDEs (e.g. VSCode, IntelliJ, Neovide) allow for remote "
"development in a container. Please consult the documentation of the "
"editor on how to do remote development."
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:226
#, fuzzy
msgid "Installing SBT in an internet-free Linux environment"
msgstr "在无互联网环境中安装 SBT"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:229
msgid ""
"If you are not using an air-gapped environment we recommend to go with "
"the normal linux installation. (which is a subset of the installation for"
" an air-gapped environment)"
msgstr ""

#: ../../SpinalHDL/Getting Started/Install and setup.rst:233
msgid ""
"Normally, SBT uses online repositories to download and cache your "
"projects dependencies. This cache is located in several folders:"
msgstr "通常，SBT 使用在线存储库来下载和缓存项目依赖项。该缓存位于几个文件夹中："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:236
msgid "``~/.sbt``"
msgstr "``~/.sbt``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:237
msgid "``~/.cache/JNA``"
msgstr "``~/.cache/JNA``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:238
msgid "``~/.cache/coursier``"
msgstr "``~/.cache/cousier``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:240
msgid "To set up an internet-free environment, you can:"
msgstr "要设置无互联网环境，您可以："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:242
#, fuzzy
msgid "Set up an environment with internet (see above)"
msgstr "搭建一个有网络的环境"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:243
msgid ""
"Launch a Spinal command (see :ref:`Using SBT`) to fetch dependencies (for"
" instance using the `getting started "
"<https://github.com/SpinalHDL/SpinalTemplateSbt>`_ repository)"
msgstr ""
"启动 Spinal 命令（请参阅：ref:`使用 SBT`）来获取依赖项（例如使用`入门 "
"<https://github.com/SpinalHDL/SpinalTemplateSbt>`_ 存储库）"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:246
msgid "Copy the caches to the internet-free environment."
msgstr "将缓存复制到无互联网环境。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:251
#, fuzzy
msgid "Create a first SpinalHDL project"
msgstr "创建 SpinalHDL 项目"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:253
msgid ""
"We have prepared a ready-to-go project for you the: `getting started "
"<https://github.com/SpinalHDL/SpinalTemplateSbt>`_ repository."
msgstr "我们为您准备了一个现成的项目：`入门 <https://github.com/SpinalHDL/SpinalTemplateSbt>`_ 存储库。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:255
msgid ""
"You can `download "
"<https://codeload.github.com/SpinalHDL/SpinalTemplateSbt/zip/master>`_ "
"it, or clone it."
msgstr ""
"您可以下载 "
"<https://codeload.github.com/SpinalHDL/SpinalTemplateSbt/zip/master>`_ "
"它，或克隆它。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:257
msgid ""
"The following commands clone the project into a new directory named "
"``MySpinalProject`` and initialize a fresh ``git`` history:"
msgstr "以下命令将项目克隆到名为“MySpinalProject”的新目录中，并初始化新的“git”历史记录："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:271
msgid "The directory structure of a project"
msgstr "项目的目录结构"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:275
msgid ""
"The structure described here is the default structure, but it can be "
"easily modified."
msgstr "这里描述的结构是默认结构，但可以轻松修改。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:278
msgid "In the root of the project are the following files:"
msgstr "项目的根目录中有以下文件："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:281
msgid "File"
msgstr "文件"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:281
msgid "Description"
msgstr "描述"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:283
msgid "``build.sbt``"
msgstr "``build.sbt``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:283
msgid "Scala configuration for ``sbt``"
msgstr "``sbt`` 的 Scala 配置"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:284
msgid "``build.sc``"
msgstr "``构建.sc``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:284
msgid "Scala configuration for ``mill``, an alternative to ``sbt``"
msgstr "“mill” 的 Scala 配置，“sbt” 的替代品"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:285
msgid "``hw/``"
msgstr "``hw/``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:285
msgid "The folder containing hardware descriptions"
msgstr "包含硬件描述的文件夹"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:286
msgid "``project/``"
msgstr "``项目/``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:286
msgid "More Scala configuration"
msgstr "更多 Scala 配置"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:287
msgid "``README.md``"
msgstr "``自述文件.md``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:287
msgid "A ``text/markdown`` file describing your project"
msgstr "描述您的项目的“text/markdown”文件"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:288
msgid "``.gitignore``"
msgstr "``.gitignore``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:288
msgid "List of files to ignore in versioning"
msgstr "版本控制中要忽略的文件列表"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:289
msgid "``.mill-version``"
msgstr "``.mill-版本``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:289
msgid "More configuration for ``mill``"
msgstr "``mill`` 的更多配置"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:290
msgid "``.scalafmt.conf``"
msgstr "``.scalafmt.conf``"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:290
msgid "Configuration of rules to auto-format the code"
msgstr "配置自动格式化代码的规则"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:293
msgid ""
"As you probably guessed it, the interesting thing here is ``hw/``. It "
"contains four folders: ``spinal/``, ``verilog/`` and ``vhdl/`` for your "
"IPs and ``gen/`` for IPs generated with Spinal."
msgstr ""
"正如您可能猜到的，这里有趣的是“hw/”。它包含四个文件夹：“spinal/”、“verilog/” 和“vhdl/” 用于您的 "
"IP，“gen/” 用于使用 Spinal 生成的 IP。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:297
msgid ""
"``hw/spinal/`` contains a folder named after your project name. This name"
" must be set in ``build.sbt`` (along with the company name) and in "
"``build.sc``; and it must be the one in ``package yourprojectname`` at "
"the beginning of ``.scala`` files."
msgstr ""
"``hw/spinal/`` "
"包含一个以您的项目名称命名的文件夹。该名称必须在“build.sbt”（以及公司名称）和“build.sc”中设置；并且它必须是“.scala”文件开头的“package"
" yourprojectname”中的那个。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:302
msgid ""
"In ``hw/spinal/yourprojectname/``, are the descriptions of your IPs, "
"simulation tests, formal tests; and there is ``Config.scala``, which "
"contains the configuration of ``Spinal``."
msgstr "在``hw/spinal/yourprojectname/``中，是你的IP的描述，模拟测试，正式测试；还有“Config.scala”，其中包含“Spinal”的配置。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:308
msgid ""
"``sbt`` must be used **only** at the root of the project, in the folder "
"containing ``build.sbt``."
msgstr "``sbt`` 必须**仅**在项目的根目录中包含``build.sbt`` 的文件夹中使用。"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:313
msgid "Using Spinal on SpinalHDL code"
msgstr "在 SpinalHDL 代码上使用 Spinal"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:315
msgid ""
"Now the tutorial shows how to use Spinal on SpinalHDL code depending on "
"your development environment:"
msgstr "现在，教程展示了如何根据您的开发环境在 SpinalHDL 代码上使用 Spinal："

#: ../../SpinalHDL/Getting Started/Install and setup.rst:318
msgid ":ref:`Using SBT`"
msgstr ":ref:`使用 SBT`"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:319
msgid ":ref:`Using VSCodium`"
msgstr ":ref:`使用 VSCodium`"

#: ../../SpinalHDL/Getting Started/Install and setup.rst:320
msgid ":ref:`Using IntelliJ`"
msgstr ":ref:`使用 IntelliJ`"

#~ msgid "Mandatory requirements"
#~ msgstr "强制性要求"

#~ msgid "For instance, to install them on the Debian distribution:"
#~ msgstr "例如，要将它们安装在 Debian 发行版上："

#~ msgid ""
#~ "If you do not need this, you "
#~ "can skip to the next section: "
#~ ":ref:`recommended`."
#~ msgstr "如果您不需要这个，您可以跳到下一部分：:ref:`推荐`。"

#~ msgid ""
#~ "You can get a portable SBT setup"
#~ " here: https://www.scala-sbt.org/download.html"
#~ msgstr "您可以在此处获取便携式 SBT 设置：https://www.scala-sbt.org/download.html"

#~ msgid ""
#~ "You might be interested in `SpinalNomad"
#~ " <https://github.com/SpinalHDL/SpinalNomad/tree/main/sbt>`_."
#~ msgstr ""
#~ "您可能对“SpinalNomad "
#~ "<https://github.com/SpinalHDL/SpinalNomad/tree/main/sbt>”感兴趣。"

#~ msgid "Recommended requirements"
#~ msgstr "推荐要求"

