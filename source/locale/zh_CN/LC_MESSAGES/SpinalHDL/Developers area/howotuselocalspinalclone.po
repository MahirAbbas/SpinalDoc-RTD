# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018 - 2024, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-19 07:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.15.0\n"

#: ../../SpinalHDL/Developers area/howotuselocalspinalclone.rst:2
msgid "How to use a local SpinalHDL clone as project dependency"
msgstr ""

#: ../../SpinalHDL/Developers area/howotuselocalspinalclone.rst:4
msgid ""
"The default way to use SpinalHDL is by using the released version of it as "
"is automatically downloaded by sbt or mill. Living on the cutting edge, you "
"might want to use the upstream and non released ``dev`` branch from git "
"directly. Be it just because you want to use a new shiny feature or because "
"you want to test your own extension to Spinal (please consider upstreaming "
"it by opening a PR) within a project."
msgstr ""

#: ../../SpinalHDL/Developers area/howotuselocalspinalclone.rst:11
msgid ""
"As an example of where this is used you can also refer to `VexiiRiscv`_."
msgstr ""

#: ../../SpinalHDL/Developers area/howotuselocalspinalclone.rst:15
msgid "Create local git clone of SpinalHDL"
msgstr ""

#: ../../SpinalHDL/Developers area/howotuselocalspinalclone.rst:22
msgid ""
"In the command above you can replace ``dev`` by the name of the branch you "
"want to checkout. ``--depth 1`` prevents from downloading the repository "
"history."
msgstr ""

#: ../../SpinalHDL/Developers area/howotuselocalspinalclone.rst:27
msgid "Configure buildsystem"
msgstr ""

#: ../../SpinalHDL/Developers area/howotuselocalspinalclone.rst:29
msgid ""
"Depending on which tool you use, instruct either sbt or mill to load the "
"local git folder as dependency:"
msgstr ""

#: ../../SpinalHDL/Developers area/howotuselocalspinalclone.rst:34
msgid "Configure sbt (update ``build.sbt``)"
msgstr ""

#: ../../SpinalHDL/Developers area/howotuselocalspinalclone.rst:61
msgid "Configure mill (update ``build.sc``)"
msgstr ""

#: ../../SpinalHDL/Developers area/howotuselocalspinalclone.rst:91
msgid ""
"Note the line ``import $file.^.SpinalHDL.build``. It is using ammonite REPL "
"magic ``$file`` to look up the ``build.sc`` of SpinalHDL. (The ``^`` moves "
"up one directory from the current.) This is assuming the following directory "
"structure:"
msgstr ""

#: ../../SpinalHDL/Developers area/howotuselocalspinalclone.rst:106
msgid "Done"
msgstr ""

#: ../../SpinalHDL/Developers area/howotuselocalspinalclone.rst:108
msgid ""
"Note the addition to ``scalacOptions``. Without it, compiling any Spinal "
"project might produce countless ``SCOPE VIOLATION`` or ``HIERARCHY "
"VIOLATION`` errors because the ``idslplugin`` of spinal is not actually "
"invoked."
msgstr ""

#: ../../SpinalHDL/Developers area/howotuselocalspinalclone.rst:112
msgid ""
"After the changes, the next compilation of your project will take a "
"considerable amount of time (~2 minutes). This is only for the first "
"compile. After this, your project should compile as usual."
msgstr ""
