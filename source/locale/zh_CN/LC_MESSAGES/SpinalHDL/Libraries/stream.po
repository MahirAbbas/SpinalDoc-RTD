
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDLReport-Msgid-Bugs-To:POT-Creation-"
"Date:2023-12-01 11:48+0800PO-Revision-Date:YEAR-MO-DA HO:MI+ZONELast-"
"Translator:FULL NAME <EMAIL@ADDRESS>Language:zh_CNLanguage-Team:zh_CN "
"<LL@li.org>Plural-Forms:nplurals=1; plural=0;MIME-Version:1.0Content-"
"Type:text/plain; charset=UTF-8\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESSPOT-Creation-Date:2023-12-02 00:23"
"+0800PO-Revision-Date:YEAR-MO-DA HO:MI+ZONELast-Translator:FULL NAME "
"<EMAIL@ADDRESS>Language-Team:LANGUAGE <LL@li.org>MIME-Version:1.0Content-"
"Type:text/plain; charset=UTF-8\n"
"POT-Creation-Date: 2025-05-01 09:36+0000\n"
"PO-Revision-Date: 2024-06-15 00:17+0000\n"
"Last-Translator: Readon <xydarcher@qq.com>\n"
"Language: zh_CN\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects"
"/spinaldoc-rtd/spinalhdllibrariesstream/zh_Hans/>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../SpinalHDL/Libraries/stream.rst:7
msgid "Stream"
msgstr "Stream"

#: ../../SpinalHDL/Libraries/stream.rst:10
msgid "Specification"
msgstr "规范"

#: ../../SpinalHDL/Libraries/stream.rst:12
msgid "The Stream interface is a simple handshake protocol to carry payload."
msgstr "反压流(Stream)是一个用于承载有效负载的简单握手协议。"

#: ../../SpinalHDL/Libraries/stream.rst:13
msgid ""
"It could be used for example to push and pop elements into a FIFO, send "
"requests to a UART controller, etc."
msgstr "例如，它可用于对FIFO推入和弹出数据、向UART控制器发送请求等。"

#: ../../SpinalHDL/Libraries/stream.rst:19
msgid "Signal"
msgstr "信号"

#: ../../SpinalHDL/Libraries/stream.rst:20
#: ../../SpinalHDL/Libraries/stream.rst:234
#: ../../SpinalHDL/Libraries/stream.rst:273
#: ../../SpinalHDL/Libraries/stream.rst:314
#: ../../SpinalHDL/Libraries/stream.rst:335
#: ../../SpinalHDL/Libraries/stream.rst:376
#: ../../SpinalHDL/Libraries/stream.rst:394
msgid "Type"
msgstr "类型"

#: ../../SpinalHDL/Libraries/stream.rst:21
msgid "Driver"
msgstr "驱动"

#: ../../SpinalHDL/Libraries/stream.rst:22
#: ../../SpinalHDL/Libraries/stream.rst:96
#: ../../SpinalHDL/Libraries/stream.rst:235
#: ../../SpinalHDL/Libraries/stream.rst:251
#: ../../SpinalHDL/Libraries/stream.rst:274
#: ../../SpinalHDL/Libraries/stream.rst:315
#: ../../SpinalHDL/Libraries/stream.rst:336
#: ../../SpinalHDL/Libraries/stream.rst:377
#: ../../SpinalHDL/Libraries/stream.rst:395
#: ../../SpinalHDL/Libraries/stream.rst:464
#: ../../SpinalHDL/Libraries/stream.rst:479
msgid "Description"
msgstr "描述"

#: ../../SpinalHDL/Libraries/stream.rst:23
msgid "Don't care when"
msgstr "何时忽略"

#: ../../SpinalHDL/Libraries/stream.rst:24
msgid "valid"
msgstr "valid"

#: ../../SpinalHDL/Libraries/stream.rst:25
#: ../../SpinalHDL/Libraries/stream.rst:30
#: ../../SpinalHDL/Libraries/stream.rst:110
#: ../../SpinalHDL/Libraries/stream.rst:114
#: ../../SpinalHDL/Libraries/stream.rst:118
#: ../../SpinalHDL/Libraries/stream.rst:282
msgid "Bool"
msgstr "Bool"

#: ../../SpinalHDL/Libraries/stream.rst:26
#: ../../SpinalHDL/Libraries/stream.rst:36
msgid "Master"
msgstr "Master"

#: ../../SpinalHDL/Libraries/stream.rst:27
msgid "When high => payload present on the interface"
msgstr "当为高时 => 接口上存在有效负载(payload)"

#: ../../SpinalHDL/Libraries/stream.rst:29
msgid "ready"
msgstr "ready"

#: ../../SpinalHDL/Libraries/stream.rst:31
msgid "Slave"
msgstr "Slave"

#: ../../SpinalHDL/Libraries/stream.rst:32
msgid "When low => transaction are not consumed by the slave"
msgstr "当为低时 => 从端不接收传输"

#: ../../SpinalHDL/Libraries/stream.rst:33
#: ../../SpinalHDL/Libraries/stream.rst:38
msgid "valid is low"
msgstr "valid为低"

#: ../../SpinalHDL/Libraries/stream.rst:34
msgid "payload"
msgstr "payload"

#: ../../SpinalHDL/Libraries/stream.rst:35
#: ../../SpinalHDL/Libraries/stream.rst:237
#: ../../SpinalHDL/Libraries/stream.rst:317
#: ../../SpinalHDL/Libraries/stream.rst:379
msgid "T"
msgstr "T"

#: ../../SpinalHDL/Libraries/stream.rst:37
msgid "Content of the transaction"
msgstr "传输任务内容"

#: ../../SpinalHDL/Libraries/stream.rst:49
msgid "There is some examples of usage in SpinalHDL :"
msgstr "这里有一些在SpinalHDL中的用法示例："

#: ../../SpinalHDL/Libraries/stream.rst:70
msgid ""
"Each slave can or can't allow the payload to change when valid is high "
"and ready is low. For examples:"
msgstr "当valid为高且ready为低时，每个从端都可以控制是否允许有效负载变化。例如："

#: ../../SpinalHDL/Libraries/stream.rst:73
msgid ""
"An priority arbiter without lock logic can switch from one input to the "
"other (which will change the payload)."
msgstr "没有锁逻辑的优先级仲裁器可以从一个输入切换到另一个输入（这将改变有效负载）。"

#: ../../SpinalHDL/Libraries/stream.rst:74
msgid ""
"An UART controller could directly use the write port to drive UART pins "
"and only consume the transaction at the end of the transmission. Be "
"careful with that."
msgstr "UART控制器可以直接使用写端口驱动UART引脚，并且只在传输结束时完成数据交换。对此需要注意。"

#: ../../SpinalHDL/Libraries/stream.rst:78
msgid "Semantics"
msgstr "语义"

#: ../../SpinalHDL/Libraries/stream.rst:80
msgid "When manually reading/driving the signals of a Stream keep in mind that:"
msgstr "当手动读取/驱动反压流的信号时，请记住："

#: ../../SpinalHDL/Libraries/stream.rst:82
#, fuzzy
msgid ""
"After being asserted, ``valid`` may only be deasserted once the current "
"payload was acknowledged. This means ``valid`` can only toggle to 0 the "
"cycle after a the slave did a read by asserting ``ready``."
msgstr ""
"当 ``valid`` 被置为有效后，它只有在当前负载被使用后才能被置为无效。这意味着 ``valid`` 只能在从端通过置高 ``ready``"
" 完成一次读取后的下一个周期，才可以切换到0。"

#: ../../SpinalHDL/Libraries/stream.rst:83
msgid "In contrast to that ``ready`` may change at any time."
msgstr "相反， ``ready`` 可以随时改变。"

#: ../../SpinalHDL/Libraries/stream.rst:84
msgid ""
"A transfer is only done on cycles where both ``valid`` and ``ready`` are "
"asserted."
msgstr "传输仅在 ``valid`` 和 ``ready`` 均已置高的周期内进行。"

#: ../../SpinalHDL/Libraries/stream.rst:85
msgid ""
"``valid`` of a Stream must not depend on ``ready`` in a combinatorial way"
" and any path between the two must be registered."
msgstr "一个反压流的 ``valid`` 不能以组合逻辑方式和 ``ready`` 连接，并且两者之间的任何路径都必须经过寄存器。"

#: ../../SpinalHDL/Libraries/stream.rst:86
msgid "It is recommended that ``valid`` does not depend on ``ready`` at all."
msgstr "推荐 ``valid`` 和 ``ready`` 之间没有任何依赖。"

#: ../../SpinalHDL/Libraries/stream.rst:89
msgid "Functions"
msgstr "函数"

#: ../../SpinalHDL/Libraries/stream.rst:95
msgid "Syntax"
msgstr "语法"

#: ../../SpinalHDL/Libraries/stream.rst:97
#: ../../SpinalHDL/Libraries/stream.rst:494
msgid "Return"
msgstr "返回类型"

#: ../../SpinalHDL/Libraries/stream.rst:98
msgid "Latency"
msgstr "延迟"

#: ../../SpinalHDL/Libraries/stream.rst:99
msgid "Stream(type : Data)"
msgstr "Stream(type : Data)"

#: ../../SpinalHDL/Libraries/stream.rst
#: ../../SpinalHDL/Libraries/stream.rst:100
msgid "Create a Stream of a given type"
msgstr "创建一个给定类型的Stream反压流"

#: ../../SpinalHDL/Libraries/stream.rst:101
#: ../../SpinalHDL/Libraries/stream.rst:106
#: ../../SpinalHDL/Libraries/stream.rst:122
#: ../../SpinalHDL/Libraries/stream.rst:129
#: ../../SpinalHDL/Libraries/stream.rst:135
#: ../../SpinalHDL/Libraries/stream.rst:141
#: ../../SpinalHDL/Libraries/stream.rst:167
#: ../../SpinalHDL/Libraries/stream.rst:172
#: ../../SpinalHDL/Libraries/stream.rst:276
#: ../../SpinalHDL/Libraries/stream.rst:279
#: ../../SpinalHDL/Libraries/stream.rst:338
#: ../../SpinalHDL/Libraries/stream.rst:341
#: ../../SpinalHDL/Libraries/stream.rst:397
#: ../../SpinalHDL/Libraries/stream.rst:400
#: ../../SpinalHDL/Libraries/stream.rst:496
#: ../../SpinalHDL/Libraries/stream.rst:498
msgid "Stream[T]"
msgstr "Stream[T]"

#: ../../SpinalHDL/Libraries/stream.rst:103
msgid "master/slave Stream(type : Data)"
msgstr "master/slave Stream(type : Data)"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "Initialized with corresponding in/out setup"
msgstr "通过相应的输入/输出设置进行初始化"

#: ../../SpinalHDL/Libraries/stream.rst:108
msgid "x.fire"
msgstr "x.fire"

#: ../../SpinalHDL/Libraries/stream.rst:109
msgid "Return True when a transaction is consumed on the bus (valid && ready)"
msgstr "当总线上的传输完成时返回 True(valid && ready)"

#: ../../SpinalHDL/Libraries/stream.rst:112
msgid "x.isStall"
msgstr "x.isStall"

#: ../../SpinalHDL/Libraries/stream.rst:113
msgid "Return True when a transaction is stall on the bus (valid && ! ready)"
msgstr "当总线上的传输停滞时返回True(valid && ! ready)"

#: ../../SpinalHDL/Libraries/stream.rst:116
#, fuzzy
msgid "x.isFree"
msgstr "x.fire"

#: ../../SpinalHDL/Libraries/stream.rst:117
msgid "Return True when the bus isn't stuck with a transaction (!isStall)"
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:120
msgid "x.queue(size:Int)"
msgstr "x.queue(size:Int)"

#: ../../SpinalHDL/Libraries/stream.rst:121
msgid "Return a Stream connected to x through a FIFO"
msgstr "返回一个通过FIFO连接到x的Stream"

#: ../../SpinalHDL/Libraries/stream.rst:123
msgid "2"
msgstr "2"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "x.m2sPipe()"
msgstr "x.m2sPipe()"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "x.stage()"
msgstr "x.stage()"

#: ../../SpinalHDL/Libraries/stream.rst
#, fuzzy
msgid "Return a Stream driven by x"
msgstr "返回由x驱动的Stream反压流"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "through a register stage that cut valid/payload paths"
msgstr "通过寄存器，切断valid/payload路径"

#: ../../SpinalHDL/Libraries/stream.rst
#, fuzzy
msgid "Cost = (payload width + 1) flip-flops"
msgstr "Cost = (payload width + 1) 触发器"

#: ../../SpinalHDL/Libraries/stream.rst:130
#: ../../SpinalHDL/Libraries/stream.rst:142
#: ../../SpinalHDL/Libraries/stream.rst:152
#: ../../SpinalHDL/Libraries/stream.rst:163
msgid "1"
msgstr "1"

#: ../../SpinalHDL/Libraries/stream.rst:131
msgid "x.s2mPipe()"
msgstr "x.s2mPipe()"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "ready paths is cut by a register stage"
msgstr "通过寄存器级断开ready路径"

#: ../../SpinalHDL/Libraries/stream.rst
#, fuzzy
msgid "Cost = payload width * (mux2 + 1 flip-flops)"
msgstr "Cost = payload width * (mux2 + 1 flip flop)"

#: ../../SpinalHDL/Libraries/stream.rst:136
#: ../../SpinalHDL/Libraries/stream.rst:147
#: ../../SpinalHDL/Libraries/stream.rst:157
#: ../../SpinalHDL/Libraries/stream.rst:168
#: ../../SpinalHDL/Libraries/stream.rst:173
#: ../../SpinalHDL/Libraries/stream.rst:178
#: ../../SpinalHDL/Libraries/stream.rst:183
msgid "0"
msgstr "0"

#: ../../SpinalHDL/Libraries/stream.rst:137
msgid "x.halfPipe()"
msgstr "x.halfPipe()"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "valid/ready/payload paths are cut by some register"
msgstr "valid/ready/payload路径通过一些寄存器分割"

#: ../../SpinalHDL/Libraries/stream.rst
#, fuzzy
msgid "Cost = (payload width + 2) flip-flops, bandwidth divided by two"
msgstr "成本 = (payload位宽 + 2)个触发器，带宽除以二"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "x << y"
msgstr "x << y"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "y >> x"
msgstr "y >> x"

#: ../../SpinalHDL/Libraries/stream.rst:145
msgid "Connect y to x"
msgstr "将 y 连接到 x"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "x <-< y"
msgstr "x <-< y"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "y >-> x"
msgstr "y >-> x"

#: ../../SpinalHDL/Libraries/stream.rst:150
msgid "Connect y to x through a m2sPipe"
msgstr "通过 m2sPipe 将 y 连接到 x"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "x </< y"
msgstr "x </< y"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "y >/> x"
msgstr "y >/> x"

#: ../../SpinalHDL/Libraries/stream.rst:155
msgid "Connect y to x through a s2mPipe"
msgstr "通过s2mPipe将y连接到x"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "x <-/< y"
msgstr "x <-/< y"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "y >/-> x"
msgstr "y >/-> x"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "Connect y to x through s2mPipe().m2sPipe()"
msgstr "通过 s2mPipe().m2sPipe() 将 y 连接到 x"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "Which imply no combinatorial path between x and y"
msgstr "这意味着x和y之间没有组合逻辑路径"

#: ../../SpinalHDL/Libraries/stream.rst:164
msgid "x.haltWhen(cond : Bool)"
msgstr "x.haltWhen(cond : Bool)"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "Return a Stream connected to x"
msgstr "返回连接到x的反压流"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "Halted when cond is true"
msgstr "cond为true时暂停"

#: ../../SpinalHDL/Libraries/stream.rst:169
msgid "x.throwWhen(cond : Bool)"
msgstr "x.throwWhen(cond : Bool)"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "When cond is true, transaction are dropped"
msgstr "当cond为true时，传输数据将被抛弃"

#: ../../SpinalHDL/Libraries/stream.rst:174
msgid "x.translateWith(that : T2)"
msgstr "x.translateWith(that : T2)"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "Return a Stream with payload `that`"
msgstr "返回带有效载荷 `that` 的流"

#: ../../SpinalHDL/Libraries/stream.rst
msgid ""
"Modify the payload of the `x` stream, while preserving the `valid` and "
"`ready` signals"
msgstr "修改 `x` 流的有效载荷，同时保留 `valid` 和 `ready` 信号"

#: ../../SpinalHDL/Libraries/stream.rst:177
#: ../../SpinalHDL/Libraries/stream.rst:182
msgid "Stream[T2]"
msgstr "Stream[T2]"

#: ../../SpinalHDL/Libraries/stream.rst:179
msgid "x.map(translate: (T) => T2)"
msgstr "x.map(translate: (T) => T2)"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "Return a Stream with payload calculated by translate function"
msgstr "返回一个流，其有效载荷由 `translate` 函数计算"

#: ../../SpinalHDL/Libraries/stream.rst:186
msgid "The following code will create this logic :"
msgstr "以下代码将创建此逻辑："

#: ../../SpinalHDL/Libraries/stream.rst:206
msgid "Utils"
msgstr "实用工具"

#: ../../SpinalHDL/Libraries/stream.rst:208
msgid ""
"There is many utils that you can use in your design in conjunction with "
"the Stream bus, this chapter will document them."
msgstr "有许多实用工具可以在设计中与反压流总线结合使用，本章将介绍它们。"

#: ../../SpinalHDL/Libraries/stream.rst:211
msgid "StreamFifo"
msgstr "StreamFifo"

#: ../../SpinalHDL/Libraries/stream.rst:213
msgid ""
"On each stream you can call the .queue(size) to get a buffered stream. "
"But you can also instantiate the FIFO component itself :"
msgstr "您可以在每个反压流上调用 .queue(size) 来获取一个缓冲反压流。但您也可以实例化 FIFO 组件本身："

#: ../../SpinalHDL/Libraries/stream.rst:227
msgid "Mandatory parameters:"
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:233
#: ../../SpinalHDL/Libraries/stream.rst:249
#, fuzzy
msgid "Name"
msgstr "io名称"

#: ../../SpinalHDL/Libraries/stream.rst:236
#: ../../SpinalHDL/Libraries/stream.rst:316
#: ../../SpinalHDL/Libraries/stream.rst:378
msgid "dataType"
msgstr "数据类型"

#: ../../SpinalHDL/Libraries/stream.rst:238
#: ../../SpinalHDL/Libraries/stream.rst:318
#: ../../SpinalHDL/Libraries/stream.rst:380
msgid "Payload data type"
msgstr "有效负载(payload)数据类型"

#: ../../SpinalHDL/Libraries/stream.rst:239
#: ../../SpinalHDL/Libraries/stream.rst:319
msgid "depth"
msgstr "depth"

#: ../../SpinalHDL/Libraries/stream.rst:240
#: ../../SpinalHDL/Libraries/stream.rst:320
msgid "Int"
msgstr "Int"

#: ../../SpinalHDL/Libraries/stream.rst:241
msgid ""
"Number of element stored in the fifo, Note that if "
"``withAsyncRead==false``, then one extra transaction can be stored."
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:243
msgid "Optional parameters:"
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:250
msgid "Default"
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:252
msgid "withAsyncRead"
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:253
#: ../../SpinalHDL/Libraries/stream.rst:256
#: ../../SpinalHDL/Libraries/stream.rst:259
#: ../../SpinalHDL/Libraries/stream.rst:262
msgid "``false``"
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:254
msgid ""
"Read the memory using asynchronous read port (ex distributed ram). If "
"false, add 1 cycle latency."
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:255
msgid "withBypass"
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:257
msgid ""
"Bypass the push port to the pop port when the fifo is empty.If false, add"
"  1 cycle latency. Only available if ``withAsyncRead == true``."
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:258
msgid "forFMax"
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:260
msgid "Tune the design to get the maximal clock frequency."
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:261
msgid "useVec"
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:263
msgid "Use an ``Vec`` of register instead of a Mem to store the content"
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:264
#, fuzzy
msgid "initPayload"
msgstr "payload"

#: ../../SpinalHDL/Libraries/stream.rst:265
msgid "``None``"
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:266
msgid ""
"A ``=> Option[T]`` function that return a value to init the  ``Vec`` "
"register, only meaningful when ``useVec == true``"
msgstr ""

#: ../../SpinalHDL/Libraries/stream.rst:272
#: ../../SpinalHDL/Libraries/stream.rst:334
#: ../../SpinalHDL/Libraries/stream.rst:393
msgid "io name"
msgstr "io名称"

#: ../../SpinalHDL/Libraries/stream.rst:275
#: ../../SpinalHDL/Libraries/stream.rst:337
msgid "push"
msgstr "push"

#: ../../SpinalHDL/Libraries/stream.rst:277
#: ../../SpinalHDL/Libraries/stream.rst:339
#: ../../SpinalHDL/Libraries/stream.rst:398
msgid "Used to push elements"
msgstr "用于压入数据"

#: ../../SpinalHDL/Libraries/stream.rst:278
#: ../../SpinalHDL/Libraries/stream.rst:340
msgid "pop"
msgstr "pop"

#: ../../SpinalHDL/Libraries/stream.rst:280
#: ../../SpinalHDL/Libraries/stream.rst:342
#: ../../SpinalHDL/Libraries/stream.rst:401
msgid "Used to pop elements"
msgstr "用于弹出数据"

#: ../../SpinalHDL/Libraries/stream.rst:281
msgid "flush"
msgstr "flush"

#: ../../SpinalHDL/Libraries/stream.rst:283
msgid "Used to remove all elements inside the FIFO"
msgstr "用于清除FIFO内的所有数据"

#: ../../SpinalHDL/Libraries/stream.rst:284
msgid "occupancy"
msgstr "occupancy"

#: ../../SpinalHDL/Libraries/stream.rst:285
#: ../../SpinalHDL/Libraries/stream.rst:344
#: ../../SpinalHDL/Libraries/stream.rst:347
msgid "UInt of log2Up(depth + 1) bits"
msgstr "log2Up(depth + 1) bits 的 UInt"

#: ../../SpinalHDL/Libraries/stream.rst:286
msgid "Indicate the internal memory occupancy"
msgstr "反映内部存储占用情况"

#: ../../SpinalHDL/Libraries/stream.rst:290
msgid "StreamFifoCC"
msgstr "StreamFifoCC"

#: ../../SpinalHDL/Libraries/stream.rst:292
msgid ""
"You can instantiate the dual clock domain version of the fifo the "
"following way :"
msgstr "您可以通过以下方式实例化双时钟域版本的fifo："

#: ../../SpinalHDL/Libraries/stream.rst:313
#: ../../SpinalHDL/Libraries/stream.rst:375
msgid "parameter name"
msgstr "参数名称"

#: ../../SpinalHDL/Libraries/stream.rst:321
msgid "Size of the memory used to store elements"
msgstr "用于存储数据的存储器的大小"

#: ../../SpinalHDL/Libraries/stream.rst:322
msgid "pushClock"
msgstr "pushClock"

#: ../../SpinalHDL/Libraries/stream.rst:323
#: ../../SpinalHDL/Libraries/stream.rst:326
#: ../../SpinalHDL/Libraries/stream.rst:382
#: ../../SpinalHDL/Libraries/stream.rst:385
msgid "ClockDomain"
msgstr "ClockDomain"

#: ../../SpinalHDL/Libraries/stream.rst:324
#: ../../SpinalHDL/Libraries/stream.rst:383
msgid "Clock domain used by the push side"
msgstr "压入数据端使用的时钟域"

#: ../../SpinalHDL/Libraries/stream.rst:325
msgid "popClock"
msgstr "popClock"

#: ../../SpinalHDL/Libraries/stream.rst:327
#: ../../SpinalHDL/Libraries/stream.rst:386
msgid "Clock domain used by the pop side"
msgstr "弹出数据端使用的时钟域"

#: ../../SpinalHDL/Libraries/stream.rst:343
msgid "pushOccupancy"
msgstr "pushOccupancy"

#: ../../SpinalHDL/Libraries/stream.rst:345
msgid "Indicate the internal memory occupancy (from the push side perspective)"
msgstr "反映内部存储器占用情况（从压入数据端的角度）"

#: ../../SpinalHDL/Libraries/stream.rst:346
msgid "popOccupancy"
msgstr "popOccupancy"

#: ../../SpinalHDL/Libraries/stream.rst:348
msgid "Indicate the internal memory occupancy  (from the pop side perspective)"
msgstr "反映内部存储器占用情况（从弹出数据端的角度）"

#: ../../SpinalHDL/Libraries/stream.rst:352
msgid "StreamCCByToggle"
msgstr "StreamCCByToggle"

#: ../../SpinalHDL/Libraries/stream.rst:354
msgid ""
"Component that connects Streams across clock domains based on toggling "
"signals."
msgstr "基于信号切换来连接跨时钟域的反压流组件。"

#: ../../SpinalHDL/Libraries/stream.rst:355
msgid ""
"This way of implementing a cross clock domain bridge is characterized by "
"a small area usage but also a low bandwidth."
msgstr "这种实现跨时钟域桥的方式的特点是占用逻辑区小，但带宽较低。"

#: ../../SpinalHDL/Libraries/stream.rst:381
msgid "inputClock"
msgstr "inputClock"

#: ../../SpinalHDL/Libraries/stream.rst:384
msgid "outputClock"
msgstr "outputClock"

#: ../../SpinalHDL/Libraries/stream.rst:396
msgid "input"
msgstr "input"

#: ../../SpinalHDL/Libraries/stream.rst:399
msgid "output"
msgstr "output"

#: ../../SpinalHDL/Libraries/stream.rst:404
msgid ""
"Alternatively you can also use a this shorter syntax which directly "
"return you the cross clocked stream:"
msgstr "或者您也可以使用更简短的语句，直接返回跨时钟域的反压流："

#: ../../SpinalHDL/Libraries/stream.rst:418
msgid "StreamWidthAdapter"
msgstr "StreamWidthAdapter（反压流位宽适应器）"

#: ../../SpinalHDL/Libraries/stream.rst:420
msgid ""
"This component adapts the width of the input stream to the output stream."
" When the width of the ``outStream`` payload is greater than the "
"``inStream``, by combining the payloads of several input transactions "
"into one; conversely, if the payload width of the ``outStream`` is less "
"than the ``inStream``, one input transaction will be split into several "
"output transactions."
msgstr ""
"该组件使输入反压流的位宽和输出反压流匹配。当 ``outStream`` 的负载的位宽大于 ``inStream`` "
"时，通过将多个输入传输任务的负载合并为一个；相反，如果 ``outStream`` 的负载位宽小于 ``inStream`` "
"，则一个输入传输任务将被拆分为多个输出传输任务。"

#: ../../SpinalHDL/Libraries/stream.rst:423
msgid ""
"In the best case, the width of the payload of the ``inStream`` should be "
"an integer multiple of the ``outStream`` as shown below."
msgstr "在最好的情况下， ``inStream`` 的负载位宽应该是 ``outStream`` 的整数倍，如下所示。"

#: ../../SpinalHDL/Libraries/stream.rst:431
msgid ""
"As in the example above, the two ``inStream`` transactions will be merged"
" into one ``outStream`` transaction, and the payload of the first input "
"transaction will be placed on the lower bits of the output payload by "
"default."
msgstr ""
"如上例所示，两个 ``inStream`` 传输任务将合并为一个 ``outStream`` "
"传输任务，并且第一个输入传输任务的负载将默认置于输出负载的低位上。"

#: ../../SpinalHDL/Libraries/stream.rst:433
msgid ""
"If the expected order of input transaction payload placement is different"
" from the default setting, here is an example."
msgstr "如果输入传输任务负载放置的期望顺序与默认设置不同，请参阅以下示例。"

#: ../../SpinalHDL/Libraries/stream.rst:441
msgid ""
"There is also a traditional parameter called ``endianness``, which has "
"the same effect as ``ORDER``. The value of ``endianness`` is the same as "
"``LOWER_FIRST`` of ``order`` when it is ``LITTLE``, and the same as "
"``HIGHER_FIRST`` when it is ``BIG``. The ``padding`` parameter is an "
"optional boolean value to determine whether the adapter accepts non-"
"integer multiples of the input and output payload width."
msgstr ""
"还有一个称为 ``endianness`` 的传统参数，它与 ``ORDER`` 具有相同的效果。当 ``endianness`` 的值为 "
"``LITTLE`` 时，它与 ``order`` 的 ``LOWER_FIRST`` 相同；当为 ``BIG`` 时，它与 "
"``HIGHER_FIRST`` 相同。 ``padding`` "
"参数是一个可选的布尔逻辑值，它用于确定适应器是否接受输入和输出负载位宽为非整数倍。"

#: ../../SpinalHDL/Libraries/stream.rst:447
msgid "StreamArbiter"
msgstr "StreamArbiter（反压流仲裁器）"

#: ../../SpinalHDL/Libraries/stream.rst:449
msgid ""
"When you have multiple Streams and you want to arbitrate them to drive a "
"single one, you can use the StreamArbiterFactory."
msgstr "当您有多个Stream反压流并且您想要仲裁它们以驱动单个反压流时，您可以使用 StreamArbiterFactory。"

#: ../../SpinalHDL/Libraries/stream.rst:463
msgid "Arbitration functions"
msgstr "仲裁函数"

#: ../../SpinalHDL/Libraries/stream.rst:465
msgid "lowerFirst"
msgstr "lowerFirst"

#: ../../SpinalHDL/Libraries/stream.rst:466
msgid "Lower port have priority over higher port"
msgstr "较低端口优先级高于较高端口"

#: ../../SpinalHDL/Libraries/stream.rst:467
msgid "roundRobin"
msgstr "roundRobin"

#: ../../SpinalHDL/Libraries/stream.rst:468
msgid "Fair round robin arbitration"
msgstr "公平轮询仲裁"

#: ../../SpinalHDL/Libraries/stream.rst:469
msgid "sequentialOrder"
msgstr "sequentialOrder"

#: ../../SpinalHDL/Libraries/stream.rst
#, fuzzy
msgid "Could be used to retrieve transaction in a sequential order"
msgstr "可用于按顺序遍历任务"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "First transaction should come from port zero, then from port one, ..."
msgstr "第一个传输应该来自端口 0，然后来自端口 1，..."

#: ../../SpinalHDL/Libraries/stream.rst:478
msgid "Lock functions"
msgstr "锁函数"

#: ../../SpinalHDL/Libraries/stream.rst:480
msgid "noLock"
msgstr "noLock"

#: ../../SpinalHDL/Libraries/stream.rst:481
msgid ""
"The port selection could change every cycle, even if the transaction on "
"the selected port is not consumed."
msgstr "端口选择可以在每个周期改变，即使被选择的端口的传输没有执行。"

#: ../../SpinalHDL/Libraries/stream.rst:482
msgid "transactionLock"
msgstr "transactionLock"

#: ../../SpinalHDL/Libraries/stream.rst:483
msgid ""
"The port selection is locked until the transaction on the selected port "
"is consumed."
msgstr "端口选择被锁定，直到所选端口上的数据传输完成。"

#: ../../SpinalHDL/Libraries/stream.rst:484
msgid "fragmentLock"
msgstr "fragmentLock"

#: ../../SpinalHDL/Libraries/stream.rst
msgid "Could be used to arbitrate Stream[Flow[T]]."
msgstr "可用于仲裁 Stream[Flow[T]]。"

#: ../../SpinalHDL/Libraries/stream.rst
msgid ""
"In this mode, the port selection is locked until the selected port finish"
" is burst (last=True)."
msgstr "在此模式下，端口选择被锁定，直到所选端口完成突发（last=True）。"

#: ../../SpinalHDL/Libraries/stream.rst:493
msgid "Generation functions"
msgstr "生成函数"

#: ../../SpinalHDL/Libraries/stream.rst:495
msgid "on(inputs : Seq[Stream[T]])"
msgstr "on(inputs : Seq[Stream[T]])"

#: ../../SpinalHDL/Libraries/stream.rst:497
msgid "onArgs(inputs : Stream[T]*)"
msgstr "onArgs(inputs : Stream[T]*)"

#: ../../SpinalHDL/Libraries/stream.rst:501
msgid "StreamJoin"
msgstr "StreamJoin"

#: ../../SpinalHDL/Libraries/stream.rst:503
msgid ""
"This utility takes multiple input streams and waits until all of them "
"fire `valid` before letting all of them through by providing `ready`."
msgstr "该实用工具接收多个输入反压流并等待所有输入反压流触发 `valid` ，然后再通过提供 `ready` 信号让所有输入流通过。"

#: ../../SpinalHDL/Libraries/stream.rst:512
msgid "StreamFork"
msgstr "StreamFork"

#: ../../SpinalHDL/Libraries/stream.rst:514
#, fuzzy
msgid ""
"A StreamFork will clone each incoming data to all its output streams. If "
"synchronous is true, all output streams will always fire together, which "
"means that the stream will halt until all output streams are ready. If "
"synchronous is false, output streams may be ready one at a time, at the "
"cost of an additional flip-flop (1 bit per output). The input stream will"
" block until all output streams have processed each item regardlessly."
msgstr "StreamFork会将每个传入数据克隆到其所有输出流。如果synchronous为true，则所有输出流将始终一起触发，这意味着直到所有输出流准备就绪前该流将都将暂停。如果synchronous为false，那么一次可能只有一个输出流准备就绪，但需要一个额外的触发器（每个输出1位）。直到所有输出流都处理完每个项目前，输入流将阻塞。"

#: ../../SpinalHDL/Libraries/stream.rst:526
msgid "or"
msgstr "或者"

#: ../../SpinalHDL/Libraries/stream.rst:534
msgid "StreamMux"
msgstr "StreamMux"

#: ../../SpinalHDL/Libraries/stream.rst:536
msgid ""
"A mux implementation for ``Stream``. It takes a ``select`` signal and "
"streams in ``inputs``, and returns a ``Stream`` which is connected to one"
" of the input streams specified by ``select``. ``StreamArbiter`` is a "
"facility works similar to this but is more powerful."
msgstr ""
"``Stream`` 的多路复用器实现。它接受一个 ``select`` 信号和 ``inputs`` 中的反压流，并返回一个 "
"``Stream`` ，该 ``Stream`` 连接到 ``select`` 指定的其中一个输入流。 ``StreamArbiter`` "
"是一个与此类似的工具，但功能更强大。"

#: ../../SpinalHDL/Libraries/stream.rst:548
msgid ""
"The ``UInt`` type of ``select`` signal could not be changed while output "
"stream is stalled, or it might break the transaction on the fly. Use "
"``Stream`` typed ``select`` can generate a stream interface which only "
"fire and change the routing when it is safe."
msgstr ""
"当输出流暂停时， ``select`` 信号的 ``UInt`` 类型不能更改，否则可能会中断执行中的传输任务。使用 ``Stream`` 类型的"
" ``select`` 可以生成一个流接口，该接口仅在安全时触发并更改路径。"

#: ../../SpinalHDL/Libraries/stream.rst:553
msgid "StreamDemux"
msgstr "StreamDemux"

#: ../../SpinalHDL/Libraries/stream.rst:555
msgid ""
"A demux implementation for ``Stream``. It takes a ``input``, a ``select``"
" and a ``portCount`` and returns a ``Vec(Stream)`` where the output "
"stream specified by ``select`` is connected to ``input``, the other "
"output streams are inactive. For safe transaction, refer the notes above."
msgstr ""
"``Stream`` 的解复用实现。它需要一个 ``input`` 、一个 ``select`` 和一个 ``portCount`` 并返回一个 "
"``Vec(Stream)`` ，其中输出流由 ``select`` 指定并连接到 ``input`` "
"，其他输出流处于非活动状态。为了安全传输，请参阅上面的注释。"

#: ../../SpinalHDL/Libraries/stream.rst:566
msgid "StreamDispatcherSequencial"
msgstr "StreamDispatcherSequencial"

#: ../../SpinalHDL/Libraries/stream.rst:568
msgid ""
"This util take its input stream and routes it to ``outputCount`` stream "
"in a sequential order."
msgstr "该工具获取其输入流并将其按顺序连接到 ``outputCount`` 反压流。"

#: ../../SpinalHDL/Libraries/stream.rst:579
msgid "StreamTransactionExtender"
msgstr "StreamTransactionExtender"

#: ../../SpinalHDL/Libraries/stream.rst:581
msgid ""
"This utility will take one input transfer and generate several output "
"transfers, it provides the facility to repeat the payload value "
"``count+1`` times into output transfers. The ``count`` is captured and "
"registered each time inputStream fires for an individual payload."
msgstr ""
"该工具将使用一个输入传输并生成多个输出传输，它提供了将负载值重复 ``count+1`` "
"次到输出传输的功能。每当为单个负载而触发inputStream时，都会捕获并寄存 ``count`` 。"

#: ../../SpinalHDL/Libraries/stream.rst:597
#, fuzzy
msgid ""
"This ``extender`` provides several status signals, such as ``working``, "
"``last``, ``done`` where ``working`` means there is one input transfer "
"accepted and in-progress, ``last`` indicates the last output transfer is "
"prepared and waiting to complete, ``done`` become valid represents the "
"last output transfer is firing and making the current input transaction "
"process complete and ready to start another transaction."
msgstr ""
"该 ``extender`` 提供了多种状态信号，例如 ``working`` 、 ``last`` 、``done`` ，其中 "
"``working`` 表示有一个输入传输已接受并正在进行中， ``last`` 表示最后一个输出传输已准备好并等待完成，``done`` "
"变为有效表示最后一个输出传输正在触发，并使当前输入传输任务处理完成且准备好启动另一个传输。"

#: ../../SpinalHDL/Libraries/stream.rst:618
msgid ""
"If only count for output stream is required then use "
"``StreamTransactionCounter`` instead."
msgstr "如果仅需要对输出流计数，那么可以使用 ``StreamTransactionCounter`` 。"

#: ../../SpinalHDL/Libraries/stream.rst:621
msgid "Simulation support"
msgstr "仿真支持"

#: ../../SpinalHDL/Libraries/stream.rst:623
msgid "For simulation master and slave implementations are available:"
msgstr "对于仿真，有以下可用的主端和从端实现："

#: ../../SpinalHDL/Libraries/stream.rst:629
msgid "Class"
msgstr "类"

#: ../../SpinalHDL/Libraries/stream.rst:630
msgid "Usage"
msgstr "用法"

#: ../../SpinalHDL/Libraries/stream.rst:631
msgid "StreamMonitor"
msgstr "StreamMonitor"

#: ../../SpinalHDL/Libraries/stream.rst:632
msgid ""
"Used for both master and slave sides, calls function with payload if "
"Stream fires."
msgstr "用于主端和从端，如果Stream触发，则调用带有负载的函数。"

#: ../../SpinalHDL/Libraries/stream.rst:633
msgid "StreamDriver"
msgstr "StreamDriver"

#: ../../SpinalHDL/Libraries/stream.rst:634
msgid ""
"Testbench master side, drives values by calling function to apply value "
"(if available). Function must return if value was available. Supports "
"random delays."
msgstr "Testbench中主端通过调用函数来应用值（如果可用）以驱动值。如果值可用，则函数必须返回。支持随机的延迟。"

#: ../../SpinalHDL/Libraries/stream.rst:635
#, fuzzy
msgid "StreamReadyRandomizer"
msgstr "StreamReadyRandmizer"

#: ../../SpinalHDL/Libraries/stream.rst:636
msgid "Randomizes ``ready`` for reception of data, testbench is the slave side."
msgstr "随机产生 ``ready`` 以接收数据，testbench为从端。"

#: ../../SpinalHDL/Libraries/stream.rst:637
msgid "ScoreboardInOrder"
msgstr "ScoreboardInOrder"

#: ../../SpinalHDL/Libraries/stream.rst:638
msgid "Often used to compare reference/dut data"
msgstr "通常用于比较参考/dut数据"

#~ msgid ""
#~ "Modify the payload of the `x` "
#~ "stream by the `drive` function, while"
#~ " preserving the `valid` and `ready` "
#~ "signals"
#~ msgstr "修改 `x` 流的有效载荷为 `drive` 函数返回值，同时保留 `valid` 和 `ready` 信号"

