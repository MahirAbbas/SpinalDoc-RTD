# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-01 11:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/SpinalHDL/Structuring/parametrization.rst:5
msgid "Parametrization"
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:8
msgid "Introduction"
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:10
msgid "There is multiple aspect to parametrization :"
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:12
msgid "Providing elaboration time parameters to the design"
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:13
msgid "Optionaly generate some hardware"
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:16
msgid "Elaboration time parameters"
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:18
msgid "You can use the whole scala syntax to provide elaboration time parameters."
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:20
msgid "Here is an example of class parameters"
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:34
msgid "You can also use global variable defined in scala object's, but note that recently was added the ScopeProperty feature which improve on that solution."
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:37
msgid "Optional hardware"
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:39
msgid "So here there is more possibilities."
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:41
msgid "For optional signal :"
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:49
msgid "You can do the same in Bundle."
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:51
msgid "Note that you can also use scala Option."
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:53
msgid "If you want to disable the generation of a chunk of hardware :"
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:63
msgid "You can also use scala for loops :"
msgstr ""

#: ../../source/SpinalHDL/Structuring/parametrization.rst:73
msgid "So, you can extends those scala usages at elaboration time as much as you want, including using the whole scala collections (List, Set, Map, ...) to build some data model and then converting them into hardware in a procedural way (ex iterating over those list elements)."
msgstr ""
