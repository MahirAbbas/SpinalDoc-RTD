# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-01 11:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:4
msgid "Memory mapped UART"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:7
msgid "Introduction"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:9
msgid "This example will take the ``UartCtrl`` component implemented in the previous :ref:`example <example_uart>` to create a memory mapped UART controller."
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:12
msgid "Specification"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:14
msgid "The implementation will be based on the APB3 bus with a RX FIFO."
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:16
msgid "Here is the register mapping table:"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:22
msgid "Name"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:23
msgid "Type"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:24
msgid "Access"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:25
msgid "Address"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:26
msgid "Description"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:27
msgid "clockDivider"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:28
msgid "UInt"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:29
#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:34
msgid "RW"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:30
msgid "0"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:31
msgid "Set the UartCtrl clock divider"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:32
msgid "frame"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:33
msgid "UartCtrlFrameConfig"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:35
msgid "4"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:36
msgid "Set the dataLength, the parity and the stop bit configuration"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:37
msgid "writeCmd"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:38
msgid "Bits"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:39
msgid "W"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:40
#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:45
msgid "8"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:41
msgid "Send a write command to UartCtrl"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:42
msgid "writeBusy"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:43
msgid "Bool"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:44
#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:49
msgid "R"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:46
msgid "Bit 0 => zero when a new writeCmd can be sent"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:47
msgid "read"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:48
msgid "Bool / Bits"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:50
msgid "12"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:0
msgid "Bits 7 downto 0 => rx payload"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:0
msgid "Bit 31 => rx payload valid"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:56
msgid "Implementation"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:58
msgid "For this implementation, the Apb3SlaveFactory tool will be used. It allows you to define a APB3 slave with a nice syntax. You can find the documentation of this tool :ref:`there <bus_slave_factory>`."
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:60
msgid "First, we just need to define the ``Apb3Config`` that will be used for the controller. It is defined in a Scala object as a function to be able to get it from everywhere."
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:67
msgid "Then we can define a ``Apb3UartCtrl`` component which instantiates a ``UartCtrl`` and creates the memory mapping logic between it and the APB3 bus:"
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:0
msgid "Yes, that's all it takes. It's also synthesizable."
msgstr ""

#: ../../source/SpinalHDL/Examples/Advanced ones/memory_mapped_uart.rst:0
msgid "The Apb3SlaveFactory tool is not something hard-coded into the SpinalHDL compiler. It's something implemented with SpinalHDL regular hardware description syntax."
msgstr ""
