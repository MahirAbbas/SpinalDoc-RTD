# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-01 11:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/SpinalHDL/Examples/Simple ones/pll_resetctrl.rst:2
msgid "PLL BlackBox and reset controller"
msgstr ""

#: ../../source/SpinalHDL/Examples/Simple ones/pll_resetctrl.rst:4
msgid "Let's imagine you want to define a ``TopLevel`` component which instantiates a PLL ``BlackBox``\\ , and create a new clock domain from it which will be used by your core logic. Let's also imagine that you want to adapt an external asynchronous reset into this core clock domain to a synchronous reset source."
msgstr ""

#: ../../source/SpinalHDL/Examples/Simple ones/pll_resetctrl.rst:6
msgid "The following imports will be used in code examples on this page:"
msgstr ""

#: ../../source/SpinalHDL/Examples/Simple ones/pll_resetctrl.rst:14
msgid "The PLL BlackBox definition"
msgstr ""

#: ../../source/SpinalHDL/Examples/Simple ones/pll_resetctrl.rst:16
msgid "This is how to define the PLL ``BlackBox``\\ :"
msgstr ""

#: ../../source/SpinalHDL/Examples/Simple ones/pll_resetctrl.rst:23
msgid "This will correspond to the following VHDL component:"
msgstr ""

#: ../../source/SpinalHDL/Examples/Simple ones/pll_resetctrl.rst:36
msgid "TopLevel definition"
msgstr ""

#: ../../source/SpinalHDL/Examples/Simple ones/pll_resetctrl.rst:38
msgid "This is how to define your ``TopLevel`` which instantiates the PLL, creates the new ``ClockDomain``\\ , and also adapts the asynchronous reset input to a synchronous reset:"
msgstr ""
