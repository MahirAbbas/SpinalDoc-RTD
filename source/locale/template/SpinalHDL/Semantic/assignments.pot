# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-01 11:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/SpinalHDL/Semantic/assignments.rst:5
#: ../../source/SpinalHDL/Semantic/assignments.rst:8
msgid "Assignments"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:10
msgid "There are multiple assignment operators:"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:16
msgid "Symbol"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:17
#: ../../source/SpinalHDL/Semantic/assignments.rst:82
msgid "Description"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:18
msgid "``:=``"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:19
msgid "Standard assignment, equivalent to ``<=`` in VHDL/Verilog."
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:20
msgid "``\\=``"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:21
msgid "Equivalent to ``:=`` in VHDL and ``=`` in Verilog. The value is updated instantly in-place."
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:22
msgid "``<>``"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:23
msgid "Automatic connection between 2 signals or two bundles of the same type. Direction is inferred by using signal direction (in/out). (Similar behavior to ``:=``\\ )"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:25
msgid "When muxing (for instance using ``when``, see :doc:`when_switch`.), the last valid standard assignment wins. Else, assigning twice to the same assignee results in an assignment overlap (see :doc:`../Design errors/assignment_overlap`)."
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:47
msgid "It also supports Bundle assignment. Bundle multiple signals together using ``()`` to assign and assign to"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:63
msgid "It is important to understand that in SpinalHDL, the nature of a signal (combinational/sequential) is defined in its declaration, not by the way it is assigned. All datatype instances will define a combinational signal, while a datatype instance wrapped with ``Reg(...)`` will define a sequential (registered) signal."
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:73
msgid "Width checking"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:75
msgid "SpinalHDL checks that the bit count of the left side and the right side of an assignment matches. There are multiple ways to adapt the width of a given BitVector (``Bits``, ``UInt``, ``SInt``):"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:81
msgid "Resizing techniques"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:83
msgid "x := y.resized"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:84
msgid "Assign x with a resized copy of y, resize value is automatically inferred to match x"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:85
msgid "x := y.resize(newWidth)"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:86
msgid "Assign x with a resized copy of y, size is manually calculated"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:89
msgid "There is one case where Spinal automatically resizes a value:"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:95
msgid "Assignment"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:96
msgid "Problem"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:97
msgid "SpinalHDL action"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:98
msgid "myUIntOf_8bit := U(3)"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:99
msgid "U(3) creates an UInt of 2 bits, which doesn't match the left side (8 bits)"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:100
msgid "Because U(3) is a \"weak\" bit count inferred signal, SpinalHDL resizes it automatically"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:104
msgid "Combinatorial loops"
msgstr ""

#: ../../source/SpinalHDL/Semantic/assignments.rst:106
msgid "SpinalHDL checks that there are no combinatorial loops (latches) in your design. If one is detected, it raises an error and SpinalHDL will print the path of the loop."
msgstr ""
