# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-01 11:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/SpinalHDL/Data types/enum.rst:5
msgid "SpinalEnum"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:8
#: ../../source/SpinalHDL/Data types/enum.rst:48
#: ../../source/SpinalHDL/Data types/enum.rst:121
#: ../../source/SpinalHDL/Data types/enum.rst:188
msgid "Description"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:10
msgid "The ``Enumeration`` type corresponds to a list of named values."
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:13
msgid "Declaration"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:15
msgid "The declaration of an enumerated data type is as follows:"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:23
msgid "For the example above, the default encoding is used. The native enumeration type is used for VHDL and a binary encoding is used for Verilog."
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:26
msgid "The enumeration encoding can be forced by defining the enumeration as follows:"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:35
msgid "If you want to define an enumeration as in/out for a given component, you have to do as following: ``in(MyEnum())`` or ``out(MyEnum())``"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:38
#: ../../source/SpinalHDL/Data types/enum.rst:46
msgid "Encoding"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:40
msgid "The following enumeration encodings are supported:"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:47
msgid "Bit width"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:49
msgid "``native``"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:51
msgid "Use the VHDL enumeration system, this is the default encoding"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:52
msgid "``binarySequential``"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:53
#: ../../source/SpinalHDL/Data types/enum.rst:59
msgid "``log2Up(stateCount)``"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:54
msgid "Use Bits to store states in declaration order (value from 0 to n-1)"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:55
msgid "``binaryOneHot``"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:56
msgid "stateCount"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:57
msgid "Use Bits to store state. Each bit corresponds to one state"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:58
msgid "``graySequential``"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:60
msgid "Encode index (numbers as if using ``binarySequential``) as binary gray code."
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:62
msgid "Custom encodings can be performed in two different ways: static or dynamic."
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:92
msgid "Example"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:94
msgid "Instantiate an enumerated signal and assign a value to it:"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:110
msgid "Operators"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:112
msgid "The following operators are available for the ``Enumeration`` type:"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:115
msgid "Comparison"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:120
#: ../../source/SpinalHDL/Data types/enum.rst:187
msgid "Operator"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:122
msgid "Return type"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:123
msgid "x === y"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:124
msgid "Equality"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:125
#: ../../source/SpinalHDL/Data types/enum.rst:128
msgid "Bool"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:126
msgid "x =/= y"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:127
msgid "Inequality"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:153
msgid "Types"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:155
msgid "In order to use your enums, for example in a function, you may need its type."
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:157
msgid "The value type (e.g. sIdle’s type) is"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:163
#: ../../source/SpinalHDL/Data types/enum.rst:175
msgid "or equivalently"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:169
msgid "The bundle type (e.g. stateNext’s type) is"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:182
msgid "Type cast"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:189
msgid "Return"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:190
msgid "x.asBits"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:191
msgid "Binary cast to Bits"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:192
msgid "Bits(w(x) bits)"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:193
msgid "x.asUInt"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:194
msgid "Binary cast to UInt"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:195
msgid "UInt(w(x) bits)"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:196
msgid "x.asSInt"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:197
msgid "Binary cast to SInt"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:198
msgid "SInt(w(x) bits)"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:199
msgid "e.assignFromBits(bits)"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:200
msgid "Bits cast to enum"
msgstr ""

#: ../../source/SpinalHDL/Data types/enum.rst:201
msgid "MyEnum()"
msgstr ""
