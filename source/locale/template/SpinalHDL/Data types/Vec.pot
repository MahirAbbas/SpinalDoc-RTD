# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-01 11:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/SpinalHDL/Data types/Vec.rst:7
msgid "Vec"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:10
#: ../../source/SpinalHDL/Data types/Vec.rst:24
#: ../../source/SpinalHDL/Data types/Vec.rst:71
#: ../../source/SpinalHDL/Data types/Vec.rst:96
#: ../../source/SpinalHDL/Data types/Vec.rst:118
#: ../../source/SpinalHDL/Data types/Vec.rst:144
msgid "Description"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:12
msgid "A ``Vec`` is a composite type that defines a group of indexed signals (of any SpinalHDL basic type) under a single name."
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:15
#: ../../source/SpinalHDL/Data types/Vec.rst:23
msgid "Declaration"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:17
msgid "The syntax to declare a vector is as follows:"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:25
msgid "Vec(type: Data, size: Int)"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:26
msgid "Create a vector capable of holding ``size`` elements of type ``Data``"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:27
msgid "Vec(x, y, ...)"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:0
msgid "Create a vector where indexes point to the provided elements."
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:0
msgid "This constructor supports mixed element width."
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:33
msgid "Examples"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:60
msgid "Operators"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:62
msgid "The following operators are available for the ``Vec`` type:"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:65
msgid "Comparison"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:70
#: ../../source/SpinalHDL/Data types/Vec.rst:95
#: ../../source/SpinalHDL/Data types/Vec.rst:117
#: ../../source/SpinalHDL/Data types/Vec.rst:143
msgid "Operator"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:72
msgid "Return type"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:73
msgid "x === y"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:74
msgid "Equality"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:75
#: ../../source/SpinalHDL/Data types/Vec.rst:78
#: ../../source/SpinalHDL/Data types/Vec.rst:154
#: ../../source/SpinalHDL/Data types/Vec.rst:157
msgid "Bool"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:76
msgid "x =/= y"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:77
msgid "Inequality"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:90
msgid "Type cast"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:97
#: ../../source/SpinalHDL/Data types/Vec.rst:119
#: ../../source/SpinalHDL/Data types/Vec.rst:145
msgid "Return"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:98
msgid "x.asBits"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:99
msgid "Binary cast to Bits"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:100
msgid "Bits(w(x) bits)"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:111
msgid "Misc"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:120
msgid "x.getBitsWidth"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:121
msgid "Return the full size of the Vec"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:122
msgid "Int"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:134
msgid "Lib helper functions"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:137
msgid "You need to import ``import spinal.lib._`` to put these functions in scope."
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:146
msgid "x.sCount(condition: T => Bool)"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:147
msgid "Count the number of occurence matching a given condition in the Vec."
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:148
#: ../../source/SpinalHDL/Data types/Vec.rst:151
#: ../../source/SpinalHDL/Data types/Vec.rst:160
msgid "UInt"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:149
msgid "x.sCount(value: T)"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:150
msgid "Count the number of occurence of a value in the Vec."
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:152
msgid "x.sExists(condition: T => Bool)"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:153
msgid "Check if there is a matching condition in the Vec."
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:155
msgid "x.sContains(value: T)"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:156
msgid "Check if there is an element with a given value present in the Vec."
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:158
msgid "x.sFindFirst(condition: T => Bool)"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:159
msgid "Find the first element matching the given condition in the Vec, return the index of that element."
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:161
msgid "x.reduceBalancedTree(op: (T, T) => T)"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:162
msgid "Balanced reduce function, to try to minimize the depth of the resulting circuit. ``op`` should be commutative and associative."
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:163
msgid "T"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:164
msgid "x.shuffle(indexMapping: Int => Int)"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:165
msgid "Shuffle the Vec using a function that maps the old indexes to new ones."
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:166
msgid "Vec[T]"
msgstr ""

#: ../../source/SpinalHDL/Data types/Vec.rst:188
msgid "The sXXX prefix is used to disambiguate with respect to identically named Scala functions that accept a lambda function as argument."
msgstr ""
