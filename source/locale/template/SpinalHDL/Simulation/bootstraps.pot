# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-01 11:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:3
msgid "Boot a simulation"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:6
msgid "Introduction"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:8
msgid "Below is an example hardware definition + testbench:"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:46
msgid "Configuration"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:48
msgid "``SimConfig`` will return a default simulation configuration instance on which you can call multiple functions to configure your simulation:"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:54
msgid "Syntax"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:55
msgid "Description"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:56
msgid "``withWave``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:57
msgid "Enable simulation wave capture (default format)"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:58
msgid "``withVcdWave``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:59
msgid "Enable simulation wave capture (VCD text format)"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:60
msgid "``withFstWave``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:61
msgid "Enable simulation wave capture (FST binary format)"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:62
msgid "``withConfig(SpinalConfig)``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:63
msgid "Specify the ``SpinalConfig`` that should be use to generate the hardware"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:64
msgid "``allOptimisation``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:65
msgid "Enable all the RTL compilation optimizations to reduce simulation time (will increase compilation time)"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:66
msgid "``workspacePath(path)``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:67
msgid "Change the folder where the sim files are generated"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:68
msgid "``withVerilator``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:69
msgid "Use Verilator as simulation backend (default)"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:70
msgid "``withGhdl``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:71
msgid "Use GHDL as simulation backend"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:72
msgid "``withIVerilog``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:73
msgid "Use Icarus Verilog as simulation backend"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:74
msgid "``withVCS``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:75
msgid "Use Synopsys VCS as simulation backend"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:77
msgid "Then you can call the ``compile(rtl)`` function to compile the hardware and warm up the simulator. This function will return a ``SimCompiled`` instance."
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:80
msgid "On this ``SimCompiled`` instance you can run your simulation with the following functions:"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:86
msgid "``doSim[(simName[, seed])]{dut => /* main stimulus code */}``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:83
msgid "Run the simulation until the main thread runs to completion and exits/returns. It will detect and report an error if the simulation gets fully stuck. As long as e.g. a clock is running the simulation can continue forever, it is therefore recommended to use ``SimTimeout(cycles)`` to limit the possible runtime."
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:91
msgid "``doSimUntilVoid[(simName[, seed])]{dut => ...}``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:89
msgid "Run the simulation until it is ended by calling either ``simSuccess()`` or ``simFailure()``. The main stimulus thread can continue or exit early. As long as there are events to process, the simulation will continue. The simulation will report an error if it gets fully stuck."
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:93
msgid "The following testbench template will use the following toplevel :"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:102
msgid "Here is a template with many simulation configurations:"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:119
msgid "Here is a template where the simulation ends by completing the simulation main thread execution:"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:130
msgid "Here is a template where the simulation ends by explicitly calling `simSuccess()`:"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:144
msgid "Note is it equivalent to:"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:159
msgid "Note that by default, the simulation files will be placed into the ``simWorkspace/xxx`` folders. You can override the simWorkspace location by setting the ``SPINALSIM_WORKSPACE`` environnement variable."
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:162
msgid "Running multiple tests on the same hardware"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:177
msgid "Throw Success or Failure of the simulation from a thread"
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:179
msgid "At any moment during a simulation you can call ``simSuccess`` or ``simFailure`` to end it."
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:181
msgid "It is possible to make a simulation fail when it is too long, for instance because the test-bench is waiting for a condition which never occurs. To do so, call ``SimTimeout(maxDuration)`` where ``maxDuration`` is the time (in simulation units of time) after the which the simulation should be considered to have failed."
msgstr ""

#: ../../source/SpinalHDL/Simulation/bootstraps.rst:183
msgid "For instance, to make the simulation fail after 1000 times the duration of a clock cycle:"
msgstr ""
