# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-01 11:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:3
msgid "VCS Simulation Configuration"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:8
msgid "Environment variable"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:10
msgid "You should have several environment variables defined before:"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:12
msgid "``VCS_HOME``: The home path to your VCS installation."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:13
msgid "``VERDI_HOME``: The home path to your Verdi installation."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:14
msgid "Add ``$VCS_HOME/bin`` and ``$VERDI_HOME/bin`` to your ``PATH``."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:16
msgid "Prepend the following paths to your ``LD_LIBRARY_PATH`` to enable PLI features."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:26
msgid "If you encounter the ``Compilation of SharedMemIface.cpp failed`` error, make sure that you have installed C++ boost library correctly. The header and library files path should be added to ``CPLUS_INCLUDE_PATH``, ``LIBRARY_PATH`` and ``LD_LIBRARY_PATH`` respectively."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:30
msgid "User defined environment setup"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:32
msgid "Sometimes a VCS environment setup file `synopsys_sim.setup` is required to run VCS simulation. Also you may want to run some scripts or code to setup the environment just before VCS starting compilation. You can do this by `withVCSSimSetup`."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:47
msgid "This method will copy your own `synopsys_sim.setup` file to the VCS work directory under the `workspacePath` (default as `simWorkspace`) directory, and run your scripts."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:51
msgid "VCS Flags"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:53
msgid "The VCS backend follows the three step compilation flow:"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:55
msgid "Analysis step: analysis the HDL model using ``vlogan`` and ``vhdlan``."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:57
msgid "Elaborate step: elaborate the model using ``vcs`` and generate the executable hardware model."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:59
msgid "Simulation step: run the simulation."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:61
msgid "In each step, user can pass some specific flags through ``VCSFlags`` to enable some features like SDF back-annotation or multi-threads."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:63
msgid "``VCSFlags`` takes three parameters,"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:69
msgid "Name"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:70
msgid "Type"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:71
#: ../../source/SpinalHDL/Simulation/install/VCS.rst:112
msgid "Description"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:72
msgid "``compileFlags``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:73
#: ../../source/SpinalHDL/Simulation/install/VCS.rst:76
#: ../../source/SpinalHDL/Simulation/install/VCS.rst:79
msgid "``List[String]``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:74
msgid "Flags pass to ``vlogan`` or ``vhdlan``."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:75
msgid "``elaborateFlags``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:77
msgid "Flags pass to ``vcs``."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:78
msgid "``runFlags``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:80
msgid "Flags pass to executable hardware model."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:82
msgid "For example, you pass the ``-kdb`` flags to both compilation step and elaboration step, for Verdi debugging,"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:101
msgid "Waveform generation"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:103
msgid "VCS backend can generate three waveform format: ``VCD``, ``VPD`` and ``FSDB`` (Verdi required)."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:105
msgid "You can enable them by the following methods of ``SpinalSimConfig``,"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:111
msgid "Method"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:113
msgid "``withWave``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:114
msgid "Enable ``VCD`` waveform."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:115
msgid "``withVPDWave``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:116
msgid "Enable ``VPD`` waveform."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:117
msgid "``withFSDBWave``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:118
msgid "Enable ``FSDB`` waveform."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:120
msgid "Also, you can control the wave trace depth by using ``withWaveDepth(depth: Int)``."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:123
msgid "Simulation with ``Blackbox``"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:125
msgid "Sometimes, IP vendors will provide you with some design entites in Verilog/VHDL format and you want to integrate them into your SpinalHDL design. The integration can done by following two ways:"
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:128
msgid "In a ``Blackbox`` definition, use ``addRTLPath(path: String)`` to assign a external Verilog/VHDL file to this blackbox."
msgstr ""

#: ../../source/SpinalHDL/Simulation/install/VCS.rst:129
msgid "Use the method ``mergeRTLSource(fileName: String=null)`` of ``SpinalConfig``."
msgstr ""
