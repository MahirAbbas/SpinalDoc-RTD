# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, SpinalHDL
# This file is distributed under the same license as the SpinalHDL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpinalHDL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-01 11:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/SpinalHDL/Libraries/regIf.rst:3
msgid "RegIf"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:4
msgid "Register Interface Builder"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:6
msgid "Automatic address, fields allocation and conflict detection"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:7
msgid "28 Register Access types(Covering the 25 types defined by the UVM standard)"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:8
#: ../../source/SpinalHDL/Libraries/regIf.rst:111
msgid "Automatic documentation generation"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:11
msgid "Automatic allocation"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:13
msgid "Automatic address allocation"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:38
msgid "Automatic fileds allocation"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:53
msgid "confilict detection"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:69
msgid "28 Access Types"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:71
msgid "Most of these come from UVM specification"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:74
#: ../../source/SpinalHDL/Libraries/regIf.rst:399
#: ../../source/SpinalHDL/Libraries/regIf.rst:420
msgid "AccessType"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:74
#: ../../source/SpinalHDL/Libraries/regIf.rst:399
#: ../../source/SpinalHDL/Libraries/regIf.rst:420
#: ../../source/SpinalHDL/Libraries/regIf.rst:438
msgid "Description"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:74
msgid "From"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:76
#: ../../source/SpinalHDL/Libraries/regIf.rst:404
#: ../../source/SpinalHDL/Libraries/regIf.rst:423
msgid "RO"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:76
msgid "w: no effect, r: no effect"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:76
#: ../../source/SpinalHDL/Libraries/regIf.rst:77
#: ../../source/SpinalHDL/Libraries/regIf.rst:78
#: ../../source/SpinalHDL/Libraries/regIf.rst:79
#: ../../source/SpinalHDL/Libraries/regIf.rst:80
#: ../../source/SpinalHDL/Libraries/regIf.rst:81
#: ../../source/SpinalHDL/Libraries/regIf.rst:82
#: ../../source/SpinalHDL/Libraries/regIf.rst:83
#: ../../source/SpinalHDL/Libraries/regIf.rst:84
#: ../../source/SpinalHDL/Libraries/regIf.rst:85
#: ../../source/SpinalHDL/Libraries/regIf.rst:86
#: ../../source/SpinalHDL/Libraries/regIf.rst:87
#: ../../source/SpinalHDL/Libraries/regIf.rst:88
#: ../../source/SpinalHDL/Libraries/regIf.rst:89
#: ../../source/SpinalHDL/Libraries/regIf.rst:90
#: ../../source/SpinalHDL/Libraries/regIf.rst:91
#: ../../source/SpinalHDL/Libraries/regIf.rst:92
#: ../../source/SpinalHDL/Libraries/regIf.rst:93
#: ../../source/SpinalHDL/Libraries/regIf.rst:94
#: ../../source/SpinalHDL/Libraries/regIf.rst:95
#: ../../source/SpinalHDL/Libraries/regIf.rst:96
#: ../../source/SpinalHDL/Libraries/regIf.rst:97
#: ../../source/SpinalHDL/Libraries/regIf.rst:98
#: ../../source/SpinalHDL/Libraries/regIf.rst:99
#: ../../source/SpinalHDL/Libraries/regIf.rst:100
msgid "UVM"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:77
#: ../../source/SpinalHDL/Libraries/regIf.rst:402
#: ../../source/SpinalHDL/Libraries/regIf.rst:403
#: ../../source/SpinalHDL/Libraries/regIf.rst:422
msgid "RW"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:77
msgid "w: as-is, r: no effect"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:78
msgid "RC"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:78
msgid "w: no effect, r: clears all bits"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:79
msgid "RS"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:79
msgid "w: no effect, r: sets all bits"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:80
msgid "WRC"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:80
msgid "w: as-is, r: clears all bits"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:81
msgid "WRS"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:81
msgid "w: as-is, r: sets all bits"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:82
msgid "WC"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:82
msgid "w: clears all bits, r: no effect"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:83
msgid "WS"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:83
msgid "w: sets all bits, r: no effect"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:84
msgid "WSRC"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:84
msgid "w: sets all bits, r: clears all bits"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:85
msgid "WCRS"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:85
msgid "w: clears all bits, r: sets all bits"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:86
#: ../../source/SpinalHDL/Libraries/regIf.rst:401
msgid "W1C"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:86
msgid "w: 1/0 clears/no effect on matching bit, r: no effect"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:87
msgid "W1S"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:87
msgid "w: 1/0 sets/no effect on matching bit, r: no effect"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:88
msgid "W1T"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:88
msgid "w: 1/0 toggles/no effect on matching bit, r: no effect"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:89
msgid "W0C"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:89
msgid "w: 1/0 no effect on/clears matching bit, r: no effect"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:90
msgid "W0S"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:90
msgid "w: 1/0 no effect on/sets matching bit, r: no effect"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:91
msgid "W0T"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:91
msgid "w: 1/0 no effect on/toggles matching bit, r: no effect"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:92
msgid "W1SRC"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:92
msgid "w: 1/0 sets/no effect on matching bit, r: clears all bits"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:93
msgid "W1CRS"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:93
msgid "w: 1/0 clears/no effect on matching bit, r: sets all bits"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:94
msgid "W0SRC"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:94
msgid "w: 1/0 no effect on/sets matching bit, r: clears all bits"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:95
msgid "W0CRS"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:95
msgid "w: 1/0 no effect on/clears matching bit, r: sets all bits"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:96
msgid "WO"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:96
msgid "w: as-is, r: error"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:97
msgid "WOC"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:97
msgid "w: clears all bits, r: error"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:98
msgid "WOS"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:98
msgid "w: sets all bits, r: error"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:99
msgid "W1"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:99
msgid "w: first one after hard reset is as-is, other w have no effects, r: no effect"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:100
msgid "WO1"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:100
msgid "w: first one after hard reset is as-is, other w have no effects, r: error"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:101
msgid "NA"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:101
msgid "w: reserved, r: reserved"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:101
#: ../../source/SpinalHDL/Libraries/regIf.rst:102
#: ../../source/SpinalHDL/Libraries/regIf.rst:103
#: ../../source/SpinalHDL/Libraries/regIf.rst:104
#: ../../source/SpinalHDL/Libraries/regIf.rst:105
#: ../../source/SpinalHDL/Libraries/regIf.rst:106
#: ../../source/SpinalHDL/Libraries/regIf.rst:107
msgid "New"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:102
msgid "W1P"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:102
msgid "w: 1/0 pulse/no effect on matching bit, r: no effect"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:103
msgid "W0P"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:103
msgid "w: 0/1 pulse/no effect on matching bit, r: no effect"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:104
msgid "HSRW"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:104
msgid "w: Hardware Set, SoftWare RW"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:105
msgid "RWHS"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:105
msgid "w: SoftWare RW, Hardware Set"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:106
msgid "ROV"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:106
msgid "w: ReadOnly Value, used for hardware version"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:107
msgid "CSTM"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:107
msgid "w: user custom Type, used for document"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:113
msgid "Document Type"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:116
msgid "Document"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:116
msgid "Usage"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:116
msgid "Status"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:118
msgid "HTML"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:118
msgid "``busif.accept(HtmlGenerator(\"regif\", title = \"XXX register file\"))``"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:118
#: ../../source/SpinalHDL/Libraries/regIf.rst:119
#: ../../source/SpinalHDL/Libraries/regIf.rst:120
#: ../../source/SpinalHDL/Libraries/regIf.rst:121
#: ../../source/SpinalHDL/Libraries/regIf.rst:122
msgid "Y"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:119
msgid "CHeader"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:119
msgid "``busif.accept(CHeaderGenerator(\"header\", \"AP\"))``"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:120
msgid "JSON"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:120
msgid "``busif.accept(JsonGenerator(\"regif\"))``"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:121
msgid "RALF(UVM)"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:121
msgid "``busif.accept(RalfGenerator(\"header\"))``"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:122
msgid "SystemRDL"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:122
msgid "``busif.accept(SystemRdlGenerator(\"regif\", \"addrmap_name\", Some(\"name\"), Some(\"desc\")))``"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:123
msgid "Latex(pdf)"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:123
#: ../../source/SpinalHDL/Libraries/regIf.rst:124
msgid "N"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:124
msgid "docx"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:127
msgid "HTML auto-doc is now complete, Example source Code:"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:132
msgid "generated HTML document:"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:138
msgid "Special Access Usage"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:140
msgid "**CASE1:** ``RO`` usage"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:142
msgid "``RO`` is different from other types. It does not create registers and requires an external signal to drive it, Attention, please don't forget to drive it."
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:174
msgid "**CASE2:** ``ROV`` usage"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:176
msgid "ASIC design often requires some solidified version information. Unlike RO, it is not expected to generate wire signals"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:178
msgid "old way:"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:185
msgid "new way:"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:193
msgid "**CASE3:** ``HSRW/RWHS`` hardware set type In some cases, such registers are not only configured by software, but also set by hardware signals"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:230
msgid "**CASE4:** ``CSTM`` Although SpinalHDL includes 25 register types and 6 extension types, there are still various demands for private register types in practical application. Therefore, we reserve CSTM types for scalability. CSTM is only used to generate software interfaces, and does not generate actual circuits"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:245
msgid "CASE5:  ``parasiteField``"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:247
msgid "This is used for software to share the same register on multiple address instead of generating multiple register entities"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:249
msgid "example1: clock gate software enable"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:261
msgid "example2: interrupt raw reg with foce interface for software"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:272
msgid "Byte Mask"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:274
msgid "withStrb"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:278
msgid "Typical Example"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:280
msgid "Batch creat REG-Address and fields register"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:320
msgid "Interrupt Factory"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:322
msgid "Manual writing interruption"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:365
msgid "this is a very tedious and repetitive work, a better way is to use the \"factory\" paradigm to auto-generate the documentation for each signal."
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:367
msgid "now th InterruptFactory can do that."
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:369
msgid "Easy Way creat interruption:"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:393
msgid "Interrupt Design Spec"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:396
msgid "IP level interrupt Factory"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:399
#: ../../source/SpinalHDL/Libraries/regIf.rst:420
msgid "Register"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:401
msgid "RAW"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:401
msgid "int raw register, set by int event, clear when bus write 1"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:402
msgid "FORCE"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:402
msgid "int force register, for SW debug use"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:403
#: ../../source/SpinalHDL/Libraries/regIf.rst:422
msgid "MASK"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:403
#: ../../source/SpinalHDL/Libraries/regIf.rst:422
msgid "int mask register, 1: off; 0: open; defualt 1 int off"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:404
#: ../../source/SpinalHDL/Libraries/regIf.rst:423
msgid "STATUS"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:404
msgid "int status, Read Only, ``status = raw && ! mask``"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:410
#: ../../source/SpinalHDL/Libraries/regIf.rst:428
msgid "SpinalUsage:"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:417
msgid "SYS level interrupt merge"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:423
msgid "int status, RO, ``status = int_level && ! mask``"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:435
msgid "Spinal Factory"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:438
msgid "BusInterface method"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:440
#: ../../source/SpinalHDL/Libraries/regIf.rst:442
msgid "``InterruptFactory(regNamePre: String, triggers: Bool*)``"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:440
msgid "creat RAW/FORCE/MASK/STATUS for pulse event"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:441
msgid "``InterruptFactoryNoForce(regNamePre: String, triggers: Bool*)``"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:441
msgid "creat RAW/MASK/STATUS for pulse event"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:442
msgid "creat MASK/STATUS for level_int merge"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:443
#: ../../source/SpinalHDL/Libraries/regIf.rst:445
msgid "``InterruptFactoryAt(addrOffset: Int, regNamePre: String, triggers: Bool*)``"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:443
msgid "creat RAW/FORCE/MASK/STATUS for pulse event at addrOffset"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:444
msgid "``InterruptFactoryNoForceAt(addrOffset: Int, regNamePre: String, triggers: Bool*)``"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:444
msgid "creat RAW/MASK/STATUS for pulse event at addrOffset"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:445
msgid "creat MASK/STATUS for level_int merge at addrOffset"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:449
msgid "Example"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:481
msgid "Developers Area"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:483
msgid "You can add your document Type by extending the `BusIfVistor` Trait"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:485
msgid "``case class Latex(fileName : String) extends BusIfVisitor{ ... }``"
msgstr ""

#: ../../source/SpinalHDL/Libraries/regIf.rst:487
msgid "BusIfVistor give access BusIf.RegInsts to do what you want"
msgstr ""
